diff --git a/core/linux-dist/main.cpp b/core/linux-dist/main.cpp
index 83a18bc7..9354b89e 100644
--- a/core/linux-dist/main.cpp
+++ b/core/linux-dist/main.cpp
@@ -42,6 +42,10 @@ void common_linux_setup();
 // $HOME/.config/flycast on linux
 static std::string find_user_config_dir()
 {
+#ifdef __unix__
+	flycast::mkdir("/storage/.config/flycast", 0755);
+	return "/storage/.config/flycast/";
+#else
 	std::string xdg_home;
 	if (nowide::getenv("XDG_CONFIG_HOME") != nullptr)
 		// If XDG_CONFIG_HOME is set explicitly, we'll use that instead of $HOME/.config
@@ -65,12 +69,17 @@ static std::string find_user_config_dir()
 	}
 	// Unable to detect config dir, use the current folder
 	return ".";
+#endif
 }
 
 // Find the user data directory.
 // $HOME/.local/share/flycast on linux
 static std::string find_user_data_dir()
 {
+#ifdef __unix__
+	flycast::mkdir("/storage/roms/dreamcast/data", 0755);
+	return "/storage/roms/dreamcast/data/";
+#else
 	std::string xdg_home;
 	if (nowide::getenv("XDG_DATA_HOME") != nullptr)
 		// If XDG_DATA_HOME is set explicitly, we'll use that instead of $HOME/.local/share
@@ -94,6 +103,7 @@ static std::string find_user_data_dir()
 	}
 	// Unable to detect data dir, use the current folder
 	return ".";
+#endif
 }
 
 static void addDirectoriesFromPath(std::vector<std::string>& dirs, const std::string& path, const std::string& suffix)
@@ -124,7 +134,9 @@ static void addDirectoriesFromPath(std::vector<std::string>& dirs, const std::st
 static std::vector<std::string> find_system_config_dirs()
 {
 	std::vector<std::string> dirs;
-
+#ifdef __unix__
+	dirs.push_back("/storage/.config/flycast/");
+#else
 	std::string xdg_home;
 	if (nowide::getenv("XDG_CONFIG_HOME") != nullptr)
 		// If XDG_CONFIG_HOME is set explicitly, we'll use that instead of $HOME/.config
@@ -152,6 +164,7 @@ static std::vector<std::string> find_system_config_dirs()
 	dirs.push_back("./");
 
 	return dirs;
+#endif
 }
 
 // Find a file in the user data directories.
@@ -168,7 +181,9 @@ static std::vector<std::string> find_system_config_dirs()
 static std::vector<std::string> find_system_data_dirs()
 {
 	std::vector<std::string> dirs;
-
+#ifdef __unix__
+	dirs.push_back("/storage/roms/dreamcast/data/");
+#else
 	std::string xdg_home;
 	if (nowide::getenv("XDG_DATA_HOME") != nullptr)
 		// If XDG_DATA_HOME is set explicitly, we'll use that instead of $HOME/.local/share
@@ -202,6 +217,7 @@ static std::vector<std::string> find_system_data_dirs()
 	dirs.push_back("data/");
 
 	return dirs;
+#endif
 }
 
 static const char *selfPath;
